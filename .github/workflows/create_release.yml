name: Create Release on Tag with Python and NPM Artifacts

on:
  push:
    tags:
      - 'v*'  # Matches tags like v1.0.0, v2.1.0, etc.
    branches:
     - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python (for building the backend)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Step 3: Upgrade pip (if required)
      - name: Update Pip
        run: |
          python -m pip install --upgrade pip

      # Step 4: Set up Node.js for npm build
      - name: Install up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify your desired Node.js version

      # Step 5: Initialize the project environment and install dependencies
      - name: Initialize project dependencies
        working-directory: ./cardboard
        run: |
          make init

      # Step 6: Build the Python distribution (wheel and sdist)
      - name: Build dist artifacts
        run: make dist

      # Step 7: Create the GitHub release using the GitHub CLI
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          VERSION_NAME=$(cat VERSION)
          gh release create $TAG_NAME --title "Release $VERSION_NAME" --notes "Automated release for version $VERSION_NAME" --draft

      # Step 8: Upload Python and npm build artifacts to the release
      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          # Upload Python artifacts
          gh release upload $TAG_NAME dist/* --clobber
          # Upload npm build artifacts
          gh release upload $TAG_NAME cardboard_ui/dist/* --clobber

      # Step 9: Publish to PyPi and NPM registries (TODO)